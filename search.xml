<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>在vscode运行powershell出错</title>
      <link href="/2022/09/22/30581c67ffb7/"/>
      <url>/2022/09/22/30581c67ffb7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>问题描述：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo : 无法加载文件 C:\Users\HP\AppData\Roaming\npm\hexo.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:/go.microsoft.c</span><br><span class="line">om/fwlink/?LinkID=135170 中的 about_Execution_Policies。</span><br></pre></td></tr></table></figure><p>解决方案：<br>在默认情况下，我们是无法执行powershell脚本的， 需要更改执行策略。<br>Restricted &#x2F;&#x2F;不允许任何脚本运行<br>win10下更改执行策略：<br><img src="https://s2.loli.net/2022/09/22/cDdGosyajlSJkqr.png" alt="error1.png"><br><img src="https://s2.loli.net/2022/09/22/lgWpO37Fw6xXd5I.png" alt="error.png"><br><img src="https://s2.loli.net/2022/09/22/ihPj2RWyZgLtFaJ.png" alt="error2.png"></p>]]></content>
      
      
      <categories>
          
          <category> error </category>
          
      </categories>
      
      
        <tags>
            
            <tag> error </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络配置和系统管理操作</title>
      <link href="/2022/09/22/dabf2d668cdc/"/>
      <url>/2022/09/22/dabf2d668cdc/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="VMware的三种网络连接模式"><a href="#VMware的三种网络连接模式" class="headerlink" title="VMware的三种网络连接模式"></a>VMware的三种网络连接模式</h2><ul><li>桥接模式<br>虚拟机直接连接外部物理网络的模式，主机起到了网桥的作用。这种模式下，虚拟机可以直接访问外部网络，并且对外部网络是可见的。<br><img src="https://s2.loli.net/2022/09/22/Qm3EnUvMYqXWh5H.png" alt="linux35.png"></li><li>NAT模式(network address transition)<br>虚拟机和主机构建一个专有网络，并通过虚拟网络地址转(NAT)设备对ip进行转换。虚拟机通过共享主机ip可以访问外部网络，但外部网络无法访问虚拟机。<br><img src="https://s2.loli.net/2022/09/22/7oDTzRY5sZ8GyNF.png" alt="linux37.png"></li><li>仅主机模式<br>虚拟机只与主机共享一个专有网络，与外部网络无法通信。<br><img src="https://s2.loli.net/2022/09/22/sCG2tbpmNzdarQc.png" alt="linux36.png"></li></ul><h3 id="修改静态IP"><a href="#修改静态IP" class="headerlink" title="修改静态IP"></a>修改静态IP</h3>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vi/vim文本编辑器</title>
      <link href="/2022/09/18/b2e9a996e1eb/"/>
      <url>/2022/09/18/b2e9a996e1eb/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>vi是Unix操作系统和类Unix操作系统中最通用的文本编辑器。<br>vim编辑器是从vi发展出来的一个性能更强大的文本编辑器。可以主动的以字体颜色辨别语法的正确性，方便程序设计。vim与vi编辑器完全兼容。<br>添加中文拼音输入法<br><img src="https://s2.loli.net/2022/09/18/hUf5kKTQz3oJlWN.png" alt="linux31.png"><br><img src="https://s2.loli.net/2022/09/18/TofpJgr6bc28eAa.png" alt="linux32.png"><br><img src="https://s2.loli.net/2022/09/18/FjEvXkiLMS9I5Qq.png" alt="linux33.png"></p><p>快捷键:</p><ul><li>Tab 补全</li><li>super+空格 切换输入法</li></ul><p>模式转换<br><img src="https://s2.loli.net/2022/09/18/N6ATeJERpV2ayHO.png" alt="linux34.png">  </p><ul><li>一般模式<ul><li>yy 复制光标当前行</li><li>8yy 复制从光标所在行往下数8行</li><li>y$ 复制 从光标位置开始到当前行结束</li><li>y^ 复制 从光标位置开始到当前行顶部</li><li>yw 复制 当前单词</li><li>w 跳到下一个单词的词头</li><li>e 跳到下一个单词的词尾</li><li>b 跳到上一个单词的词头</li><li>p 粘贴</li><li>dd 删除当前行</li><li>8dd 删除8行</li><li>d$ 删除 从光标位置开始到当前行尾</li><li>d^ 删除 从光标位置开始到当前行头</li><li>dw 删除当前单词 光标要在单词最前边</li><li>u 撤销</li><li>x 剪切</li><li>shift+x 删除 光标之前的字符</li><li>r 替换光标所在字符</li><li>shift+r 替换光标之后的所有字符</li><li>shift+$ 移动到行尾</li><li>shift+^ 移动到行头</li><li>shift+h 移动到文本开头</li><li>shift+g 移动到文本末尾的行头</li><li>3+shift+g 移动到第三行行头</li></ul></li><li>编辑模式(插入模式)  <ul><li>i 进入编辑模式 光标位置不变</li><li>a 进入编辑模式 光标向后移动一个字符</li><li>o 进入编辑模式 光标移动到下一行行头</li><li>shift+i 进入编辑模式 光标跳转到行头</li><li>shift+a 进入编辑模式 光标跳转到行尾</li><li>shift+o 进入编辑模式 光标移动到上一行行头</li></ul></li><li>命令模式<ul><li>:set nu 显示出行号</li><li>:set nonu 隐藏行号</li><li>:w 保存</li><li>:q 退出</li><li>:wq 保存并退出</li><li>:q! 不保存强制退出</li><li>&#x2F; 查找  <ul><li>n 跳转下一个查找的单词</li><li>shift+n 跳转上一个查找的单词</li><li>:noh 取消高亮显示</li><li>:s&#x2F;old&#x2F;new 替换当前行匹配到的第一个old为new</li><li>:s&#x2F;old&#x2F;new&#x2F;g 替换当前行匹配到的所有old为new</li><li>:%s&#x2F;old&#x2F;new 替换文档中每一行匹配到的第一个old为new</li><li>:%s&#x2F;old&#x2F;new&#x2F;g 替换文档张所有old为new</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux文件与目录结构</title>
      <link href="/2022/09/17/bd03825ca7c2/"/>
      <url>/2022/09/17/bd03825ca7c2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>快捷键:</p><ul><li>Ctrl+Alt+F2 进入shell界面</li><li>Ctrl+Alt+F1 退出shell界面</li><li>Ctrl+Alt+F3 进入另一用户登录界面</li><li>Ctrl+Alt 呼唤鼠标</li></ul><p>进入此电脑<br><img src="https://s2.loli.net/2022/09/18/THmRutcn6B8kxrd.png" alt="linux28.png"></p><h2 id="linux文件"><a href="#linux文件" class="headerlink" title="linux文件"></a>linux文件</h2><p>Linux系统中一切皆文件</p><h2 id="linux目录结构"><a href="#linux目录结构" class="headerlink" title="linux目录结构"></a>linux目录结构</h2><p><img src="https://s2.loli.net/2022/09/18/HdmBzEJUZfxIqWr.png" alt="linux30.png"><br><img src="https://s2.loli.net/2022/09/18/XqvxHpZStGzc65h.png" alt="linux29.png"><br><img src="https://s2.loli.net/2022/09/18/EpGbnQ6yljIVrit.png" alt="linux27.png"><br><img src="https://s2.loli.net/2022/09/18/rIjp429CYX6ic8Z.png" alt="linux26.png"></p><ul><li>&#x2F;bin 二进制文件夹存放可以直接执行的命令</li><li>&#x2F;sbin(system bin) 存放系统管理员用的命令</li><li>&#x2F;lib(library)库目录 存放动态链接</li><li>&#x2F;usr(user) 用户目录</li><li>&#x2F;boot 启动目录 相当于BIOS</li><li>&#x2F;dev(device) 存放硬件的目录</li><li>&#x2F;etc(etcetera)等等 系统配置目录存放所有系统管理所需要的配置文件和子目录</li><li>&#x2F;home 存放普通用户的主文件夹</li><li>&#x2F;root root用户目录</li><li>&#x2F;opt(option) 存放第三方软件</li><li>&#x2F;media 可移动存储设备的挂载点</li><li>&#x2F;mnt 可移动存储设备的另一个挂载点</li><li>&#x2F;proc(process)进程目录 存放进程的信息</li><li>&#x2F;run 运行目录 存放当前系统运行以来的实时信息</li><li>&#x2F;srv(service) 存放系统服务相关的信息</li><li>&#x2F;sys(system) 存放系统硬件信息的相关文件</li><li>&#x2F;tmp(temp) 临时存放目录</li><li>&#x2F;var(variable)变量 存放不断会变化的文件</li></ul>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux安装</title>
      <link href="/2022/09/17/b2f25f3f883d/"/>
      <url>/2022/09/17/b2f25f3f883d/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="操作系统下载"><a href="#操作系统下载" class="headerlink" title="操作系统下载"></a>操作系统下载</h2><p><a href="http://isoredirect.centos.org/centos/7/isos/x86_64/">centos下载地址</a><br><img src="https://s2.loli.net/2022/09/18/yNRijclSHdx6n4D.png"></p><p><img src="https://s2.loli.net/2022/09/18/5THyUg79qoLQhn8.png"></p><h2 id="虚拟平台下载安装"><a href="#虚拟平台下载安装" class="headerlink" title="虚拟平台下载安装"></a>虚拟平台下载安装</h2><p><a href="https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html">vmware下载地址</a><br><img src="https://s2.loli.net/2022/09/18/bexFHA4Vjw3EIZd.png"><br>许可证自行百度<br>安装：下一步</p><h2 id="安装虚拟机"><a href="#安装虚拟机" class="headerlink" title="安装虚拟机"></a>安装虚拟机</h2><p><img src="https://s2.loli.net/2022/09/18/aJvO7tFznXcmT8q.png"><br><img src="https://s2.loli.net/2022/09/18/S7cNHfbyLX32zGa.png"><br><img src="https://s2.loli.net/2022/09/18/brdDO1JuBfilQo6.png"><br><img src="https://s2.loli.net/2022/09/18/o6pAByNTwULsMEn.png"><br><img src="https://s2.loli.net/2022/09/18/ea7uTWnhy8Bgb4k.png"><br><img src="https://s2.loli.net/2022/09/18/Es9Hd8PCb1WeYc5.png"><br>接下来按推荐安装</p><h3 id="安装centos"><a href="#安装centos" class="headerlink" title="安装centos"></a>安装centos</h3><p><img src="https://s2.loli.net/2022/09/18/MiD5AzkboQ4HKy7.png" alt="linux11.png"><br><img src="https://s2.loli.net/2022/09/18/jFtPbXceydg9VRp.png" alt="linux12.png"><br><img src="https://s2.loli.net/2022/09/18/6UKeHRTED9Nmugf.png" alt="linux13.png"><br><img src="https://s2.loli.net/2022/09/18/1AHPIej5KVt2Gph.png" alt="linux14.png"><br><img src="https://s2.loli.net/2022/09/18/pDuv5ZRTM39QqWA.png" alt="linux15.png"><br><img src="https://s2.loli.net/2022/09/18/hjgQ5MX3pKJYIno.png" alt="linux16.png"><br><img src="https://s2.loli.net/2022/09/18/QpdfgvCzuyRnHD2.png" alt="linux17.png"><br><img src="https://s2.loli.net/2022/09/18/9AJfMzFchBPH2Rb.png" alt="linux18.png"><br><img src="https://s2.loli.net/2022/09/18/F1OD5sUX9K72uHp.png" alt="linux19.png"><br><img src="https://s2.loli.net/2022/09/18/ET49bt8uDCON2US.png" alt="linux20.png"><br><img src="https://s2.loli.net/2022/09/18/oBEhImPFOx3cSqs.png" alt="linux21.png"><br><img src="https://s2.loli.net/2022/09/18/4vJV8DmdSh5uONH.png" alt="linux22.png"><br><img src="https://s2.loli.net/2022/09/18/qgXv5QeSOKsY6ji.png" alt="linux23.png"><br><img src="https://s2.loli.net/2022/09/18/rF8xoe2tpkCym34.png" alt="linux24.png"><br><img src="https://s2.loli.net/2022/09/18/PqETkHjmGe5pFhl.png" alt="linux25.png"><br>快捷键:</p><ul><li>Ctrl+Alt+F2 进入shell界面</li><li>Ctrl+Alt+F1 退出shell界面</li><li>Ctrl+Alt+F3 进入另一用户登录界面</li><li>Ctrl+Alt 呼唤鼠标</li></ul>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux概述</title>
      <link href="/2022/09/17/ead44191499b/"/>
      <url>/2022/09/17/ead44191499b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="linux是一个操作系统-operating-system-OS"><a href="#linux是一个操作系统-operating-system-OS" class="headerlink" title="linux是一个操作系统(operating system)(OS)"></a>linux是一个操作系统(operating system)(OS)</h3><p>三大操作系统：Windows Linux macOS</p><h3 id="GNU-x2F-Linux"><a href="#GNU-x2F-Linux" class="headerlink" title="GNU&#x2F;Linux"></a>GNU&#x2F;Linux</h3><p>GNU(GNU is not Unix)<br>GPL是一个广泛被使用的自由软件许可协议条款，最初由理查德·斯托曼(Richard Matthrew Stallman)为GNU计划而撰写。<br><img src="https://s2.loli.net/2022/09/18/JE8HM4SfdjYqpwQ.png"></p><h3 id="Linux的发行版"><a href="#Linux的发行版" class="headerlink" title="Linux的发行版"></a>Linux的发行版</h3><p>1.RedHat 性能强悍 </p><ul><li>RedHat Enterprise Linux</li><li>fedora</li><li>CentOS(性能稳定)</li></ul><p>2.debian </p><ul><li>ubuntu(有漂亮的桌面)<ul><li>Linux Mint</li></ul></li><li>SUSE  <ul><li>openSUSE(有华丽的桌面)</li></ul></li></ul><p>3.gentoo Linux<br>4.archLinux</p><ul><li>manjaro</li></ul><p><img src="https://s2.loli.net/2022/09/18/LzPrSgEBmhOvM4N.png"></p><h3 id="Linux-vs-Windows"><a href="#Linux-vs-Windows" class="headerlink" title="Linux vs Windows"></a>Linux vs Windows</h3><p><img src="https://s2.loli.net/2022/09/18/uiIxrl8tLmqfHpo.png"></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>枚举</title>
      <link href="/2022/09/15/6d04d56e1f7e/"/>
      <url>/2022/09/15/6d04d56e1f7e/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="自定义类实现枚举"><a href="#自定义类实现枚举" class="headerlink" title="自定义类实现枚举"></a>自定义类实现枚举</h2><p>1.不需要提供set方法，因为枚举对象值通常为只读<br>2.构造器私有化<br>3.本类内部创建对象<br>4.对外暴露对象。对枚举对象&#x2F;属性使用final + static 共同修饰，实现底层优化。<br>5.枚举对象名通常使用全部大写，常量的命名规范。<br>6.枚举对象根据需要，也可以有多个属性</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.hspedu.enum_;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author kss</span><br><span class="line"> * @version 1.0</span><br><span class="line"> */</span><br><span class="line">public class Enumeration1 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        System.out.println(season.SPRING);</span><br><span class="line">        System.out.println(season.AUTUMN);</span><br><span class="line">        System.out.println(season.SUMMER);</span><br><span class="line">        System.out.println(season.WINTER);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class season&#123;</span><br><span class="line">    private String name;</span><br><span class="line">    private String desc;</span><br><span class="line">    private season(String name, String desc) &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">        this.desc = desc;</span><br><span class="line">    &#125;</span><br><span class="line">    public String getName() &#123;</span><br><span class="line">        return name;</span><br><span class="line">    &#125;</span><br><span class="line">    public String getDesc() &#123;</span><br><span class="line">        return desc;</span><br><span class="line">    &#125;</span><br><span class="line">    public final static season SPRING = new season(&quot;spring&quot;,&quot;warm&quot;);</span><br><span class="line">    public final static season SUMMER = new season(&quot;summer&quot;,&quot;hot&quot;);</span><br><span class="line">    public final static season AUTUMN = new season(&quot;autumn&quot;,&quot;fun&quot;);</span><br><span class="line">    public final static season WINTER = new season(&quot;winter&quot;,&quot;cool&quot;);</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public String toString() &#123;</span><br><span class="line">        return &quot;season&#123;&quot; +</span><br><span class="line">                &quot;name=&#x27;&quot; + name + &#x27;\&#x27;&#x27; +</span><br><span class="line">                &quot;, desc=&#x27;&quot; + desc + &#x27;\&#x27;&#x27; +</span><br><span class="line">                &#x27;&#125;&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">--------------------------------------------------</span><br><span class="line">D:\jdk8\jre\lib\resources.jar;D:\jdk8\jre\lib\rt.jar;D:\idea_java_project\chapter11\out\production\chapter11 com.hspedu.enum_.Enumeration1</span><br><span class="line">season&#123;name=&#x27;spring&#x27;, desc=&#x27;warm&#x27;&#125;</span><br><span class="line">season&#123;name=&#x27;autumn&#x27;, desc=&#x27;fun&#x27;&#125;</span><br><span class="line">season&#123;name=&#x27;summer&#x27;, desc=&#x27;hot&#x27;&#125;</span><br><span class="line">season&#123;name=&#x27;winter&#x27;, desc=&#x27;cool&#x27;&#125;</span><br></pre></td></tr></table></figure><h2 id="关键字实现枚举"><a href="#关键字实现枚举" class="headerlink" title="关键字实现枚举"></a>关键字实现枚举</h2><p>1.使用关键字enum替代class<br>2.直接使用SPRING(“spring”,”warm”)创建对象，创建对象必须在enum类的最前面，如果有多个常量对象，使用“,”号间隔</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.hspedu.enum_.Enumeration04;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author kss</span><br><span class="line"> * @version 1.0</span><br><span class="line"> */</span><br><span class="line">public class Enumeration04 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        System.out.println(Season.SPRING);</span><br><span class="line">        System.out.println(Season.SUMMER);</span><br><span class="line">        System.out.println(Season.AUTUMN);</span><br><span class="line">        System.out.println(Season.WINTER);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">enum Season&#123;</span><br><span class="line">    SPRING(&quot;spring&quot;,&quot;warm&quot;),SUMMER(&quot;summer&quot;,&quot;hot&quot;),</span><br><span class="line">    AUTUMN(&quot;autumn&quot;,&quot;fun&quot;),WINTER(&quot;winter&quot;,&quot;cool&quot;);</span><br><span class="line">    private String name;</span><br><span class="line">    private String desc;</span><br><span class="line">    Season(String name, String desc) &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">        this.desc = desc;</span><br><span class="line">    &#125;</span><br><span class="line">    public String getName() &#123;</span><br><span class="line">        return name;</span><br><span class="line">    &#125;</span><br><span class="line">    public String getDesc() &#123;</span><br><span class="line">        return desc;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public String toString() &#123;</span><br><span class="line">        return &quot;Season&#123;&quot; +</span><br><span class="line">                &quot;name=&#x27;&quot; + name + &#x27;\&#x27;&#x27; +</span><br><span class="line">                &quot;, desc=&#x27;&quot; + desc + &#x27;\&#x27;&#x27; +</span><br><span class="line">                &#x27;&#125;&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>notice:<br>当我们使用enum关键字开发一个枚举类时，默认会继承Enum类，而且是一个final类<br><img src="https://s2.loli.net/2022/09/18/GhnCXvkqT2azjLb.png" alt="ps1.png"><br>2.如果使用的是无参构造器，创建常量对象，则可以省略()<br>3.调用枚举对象 不用加() ;enum名.对象名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class exercise01 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">    gender boy = gender.BOY;</span><br><span class="line">    gender boy1 = gender.BOY;</span><br><span class="line">        System.out.println(boy1 == boy);//true</span><br><span class="line">        System.out.println(boy);//BOY</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">enum gender&#123;</span><br><span class="line">    BOY,GIRL;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="enum常用方法"><a href="#enum常用方法" class="headerlink" title="enum常用方法"></a>enum常用方法</h2><p>notice:使用关键字enum时，会隐式继承Enum类。</p><ol><li><strong>toString</strong>：Enum 类已经重写过了，返回的是当前对象名,子类可以重写该方法，用于返回对象的属性信息</li><li><strong>name</strong>：返回当前对象名（常量名），子类中不能重写</li><li><strong>ordinal</strong>：返回当前对象的位置号(第几个枚举对象)，默认从 0 开始</li><li><strong>values</strong>：返回当前枚举类中所有的常量</li><li><strong>valueOf</strong>：将字符串转换成枚举对象，要求字符串必须<br>为已有的常量名，否则报异常！</li><li><strong>compareTo</strong>：比较两个枚举常量，比较的就是编号</li></ol><p>增强for循环</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL的编码设置</title>
      <link href="/2022/09/14/c2ffcb079264/"/>
      <url>/2022/09/14/c2ffcb079264/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="MySQL5-7中"><a href="#MySQL5-7中" class="headerlink" title="MySQL5.7中"></a>MySQL5.7中</h2><h3 id="问题再现：命令行操作sql乱码问题"><a href="#问题再现：命令行操作sql乱码问题" class="headerlink" title="问题再现：命令行操作sql乱码问题"></a>问题再现：命令行操作sql乱码问题</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSERT INTO t_stu VALUES(1,&#x27;张三&#x27;,&#x27;男&#x27;);</span><br><span class="line">ERROR 1366 (HY000): Incorrect string value: &#x27;\xD5\xC5\xC8\xFD&#x27; for column &#x27;sname&#x27; at</span><br><span class="line">row 1</span><br></pre></td></tr></table></figure><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><p>步骤1：查看编码命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show variables like &#x27;character_%&#x27;;</span><br><span class="line">show variables like &#x27;collation_%&#x27;;</span><br></pre></td></tr></table></figure><p>步骤2：修改mysql的数据目录下的my.ini配置文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[mysql] #大概在63行左右，在其下添加</span><br><span class="line">...</span><br><span class="line">default-character-set=utf8 #默认字符集</span><br><span class="line">[mysqld] # 大概在76行左右，在其下添加</span><br><span class="line">...</span><br><span class="line">character-set-server=utf8</span><br><span class="line">collation-server=utf8_general_ci</span><br></pre></td></tr></table></figure><p>步骤3：重启服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 启动 MySQL 服务命令：</span><br><span class="line">net start MySQL服务名</span><br><span class="line"># 停止 MySQL 服务命令：</span><br><span class="line">net stop MySQL服务名</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">d:\kss_blog&gt;net start mysql57</span><br><span class="line">发生系统错误 5。</span><br><span class="line"></span><br><span class="line">拒绝访问。</span><br></pre></td></tr></table></figure><p>原因：不是以管理员身份打开终端<br>步骤4：查看编码命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; show variables like &#x27;character_%&#x27;</span><br><span class="line">    -&gt; ;</span><br><span class="line">+--------------------------+-----------------------------+</span><br><span class="line">| Variable_name            | Value                       |</span><br><span class="line">+--------------------------+-----------------------------+</span><br><span class="line">| character_set_client     | gbk                         |</span><br><span class="line">| character_set_connection | gbk                         |</span><br><span class="line">| character_set_database   | utf8                        |</span><br><span class="line">| character_set_filesystem | binary                      |</span><br><span class="line">| character_set_results    | gbk                         |</span><br><span class="line">| character_set_server     | utf8                        |</span><br><span class="line">| character_set_system     | utf8                        |</span><br><span class="line">| character_sets_dir       | D:\MySQL5.7\share\charsets\ |</span><br><span class="line">+--------------------------+-----------------------------+</span><br><span class="line">8 rows in set, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show variables like &#x27;collation_%&#x27;;</span><br><span class="line">+----------------------+-----------------+</span><br><span class="line">| Variable_name        | Value           |</span><br><span class="line">+----------------------+-----------------+</span><br><span class="line">| collation_connection | gbk_chinese_ci  |</span><br><span class="line">| collation_database   | utf8_general_ci |</span><br><span class="line">| collation_server     | utf8_general_ci |</span><br><span class="line">+----------------------+-----------------+</span><br><span class="line">3 rows in set, 1 warning (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="MySQL8-0中"><a href="#MySQL8-0中" class="headerlink" title="MySQL8.0中"></a>MySQL8.0中</h2><p>在MySQL 8.0版本之前，默认字符集为latin1，utf8字符集指向的是utf8mb3。网站开发人员在数据库设计<br>的时候往往会将编码修改为utf8字符集。如果遗忘修改默认的编码，就会出现乱码的问题。从MySQL 8.0<br>开始，数据库的默认编码改为 utf8mb4 ，从而避免了上述的乱码问题。</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图形化数据库使用</title>
      <link href="/2022/09/14/71cd7575114c/"/>
      <url>/2022/09/14/71cd7575114c/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Navicat使用"><a href="#Navicat使用" class="headerlink" title="Navicat使用"></a>Navicat使用</h2><p>1.下载</p><p><a href="https://navicat.com.cn/download/navicat-for-mysql">navicat下载链接</a><br><img src="https://s2.loli.net/2022/09/14/MyR1ecQPuJoxNrw.png"><br>2.安装</p><p>3.连接数据库<br><img src="https://s2.loli.net/2022/09/14/cKFiaNs6yGLV8pD.png"></p><p>4.创建查询<br><img src="https://s2.loli.net/2022/09/14/RIEQDJ1YG6AjmSV.png"></p><h2 id="MySQL-workbench"><a href="#MySQL-workbench" class="headerlink" title="MySQL workbench"></a>MySQL workbench</h2><p>MySQL Workbench分为社区版和商业版，社区版完全免费，而商业版则是按年收费。<br>下载地址：<a href="http://dev.mysql.com/downloads/workbench/%E3%80%82">http://dev.mysql.com/downloads/workbench/。</a></p><h2 id="SQLyog"><a href="#SQLyog" class="headerlink" title="SQLyog"></a>SQLyog</h2><p>下载地<br>址：<a href="http://www.webyog.com/">http://www.webyog.com/</a><br><img src="https://s2.loli.net/2022/09/14/mJoFY7aziBcSdH4.png"></p><h2 id="dbeaver"><a href="#dbeaver" class="headerlink" title="dbeaver"></a>dbeaver</h2><p>DBeaver 是用Java编程语言开发的，所以需要拥有 JDK（Java Development ToolKit）环<br>境。如果电脑上没有JDK，在选择安装DBeaver组件时，勾选“Include Java”即可。</p><p>下载地址：<a href="https://dbeaver.io/download/">https://dbeaver.io/download/</a></p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql使用</title>
      <link href="/2022/09/12/91a59eba38d4/"/>
      <url>/2022/09/12/91a59eba38d4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-查看所有的数据库"><a href="#1-查看所有的数据库" class="headerlink" title="1.查看所有的数据库"></a>1.查看所有的数据库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure><p>“information_schema”是 MySQL 系统自带的数据库，主要保存 MySQL 数据库服务器的系统信息，<br>比如数据库的名称、数据表的名称、字段名称、存取权限、数据文件 所在的文件夹和系统使用的<br>文件夹，等等<br>“performance_schema”是 MySQL 系统自带的数据库，可以用来监控 MySQL 的各类性能指标。<br>“sys”数据库是 MySQL 系统自带的数据库，主要作用是以一种更容易被理解的方式展示 MySQL 数据<br>库服务器的各类性能指标，帮助系统管理员和开发人员监控 MySQL 的技术性能。<br>“mysql”数据库保存了 MySQL 数据库服务器运行时需要的系统信息，比如数据文件夹、当前使用的<br>字符集、约束检查信息，等等</p><h2 id="2-创建自己的数据库"><a href="#2-创建自己的数据库" class="headerlink" title="2.创建自己的数据库"></a>2.创建自己的数据库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create databases 数据库名;</span><br></pre></td></tr></table></figure><h2 id="3-使用自己的数据库"><a href="#3-使用自己的数据库" class="headerlink" title="3.使用自己的数据库"></a>3.使用自己的数据库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use 数据库名;</span><br></pre></td></tr></table></figure><p>使用完use语句之后，如果接下来的SQL都是针对一个数据库操作的，那就不用重复use了，如果要针对另一个数据库操作，那么要重新use。</p><h2 id="4-查看某个库的所有表格"><a href="#4-查看某个库的所有表格" class="headerlink" title="4.查看某个库的所有表格"></a>4.查看某个库的所有表格</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show tables; #要求前面有use语句</span><br><span class="line">show tables from 数据库名;</span><br></pre></td></tr></table></figure><h2 id="5-创建新的表格"><a href="#5-创建新的表格" class="headerlink" title="5.创建新的表格"></a>5.创建新的表格</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table 表名称(字段名 数据类型,字段名 数据类型);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#创建学生表</span><br><span class="line">create table student(id int,name varchar(20) #说名字最长不超过20个字符</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="6-查看一个表的数据"><a href="#6-查看一个表的数据" class="headerlink" title="6.查看一个表的数据"></a>6.查看一个表的数据</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from 数据库表名称;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查看学生表的数据</span><br><span class="line">select * from student;</span><br></pre></td></tr></table></figure><h2 id="7、添加一条记录"><a href="#7、添加一条记录" class="headerlink" title="7、添加一条记录"></a>7、添加一条记录</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">insert into 表名称 values(值列表);</span><br><span class="line">#添加两条记录到student表中</span><br><span class="line">insert into student values(1,&#x27;张三&#x27;);</span><br><span class="line">insert into student values(2,&#x27;李四&#x27;);</span><br></pre></td></tr></table></figure><h2 id="8-查看表的创建信息"><a href="#8-查看表的创建信息" class="headerlink" title="8.查看表的创建信息"></a>8.查看表的创建信息</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show create table 表名称\G</span><br><span class="line">#查看student表的详细创建信息</span><br><span class="line">show create table student\G</span><br><span class="line">#结果如下</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">Table: student</span><br><span class="line">Create Table: CREATE TABLE `student` (</span><br><span class="line">`id` int(11) DEFAULT NULL,</span><br><span class="line">`name` varchar(20) DEFAULT NULL</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>上面的结果显示student的表格的默认字符集是“latin1”不支持中文。</p><h2 id="9、查看数据库的创建信息"><a href="#9、查看数据库的创建信息" class="headerlink" title="9、查看数据库的创建信息"></a>9、查看数据库的创建信息</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show create database 数据库名\G</span><br><span class="line">#查看atguigudb数据库的详细创建信息</span><br><span class="line">show create database atguigudb\G</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#结果如下</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">Database: atguigudb</span><br><span class="line">Create Database: CREATE DATABASE `atguigudb` /*!40100 DEFAULT CHARACTER SET latin1 */</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>上面的结果显示atguigudb数据库也不支持中文，字符集默认是latin1。</p><h2 id="10-删除表格"><a href="#10-删除表格" class="headerlink" title="10.删除表格"></a>10.删除表格</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drop table 表名称;</span><br><span class="line">#删除学生表</span><br><span class="line">drop table student;</span><br></pre></td></tr></table></figure><h2 id="11-删除数据库"><a href="#11-删除数据库" class="headerlink" title="11.删除数据库"></a>11.删除数据库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drop database 数据库名;</span><br><span class="line">#删除atguigudb数据库</span><br><span class="line">drop database atguigudb;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内部类</title>
      <link href="/2022/09/11/11ae825ec46f/"/>
      <url>/2022/09/11/11ae825ec46f/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="局部内部类"><a href="#局部内部类" class="headerlink" title="局部内部类"></a>局部内部类</h2><p>1.局部内部类是定义在外部类的局部位置，通常在方法，代码块中<br>2.可以直接访问外部类的所有成员，包含私有的<br>3.不能添加访问修饰符，但是可以使用final修饰<br>4.作用域：仅仅在定义它的方法或代码块中(相当于局部变量)<br>5.外部类在方法中，可以创建内部类对象，然后调用方法即可访问<br>6.外部其他类不能访问局部内部类（因为局部内部类地位是一个局部变量）<br>7.如果外部类和局部内部类的成员重名，默认遵循就近原则，如果想访问外部类的成员，则可以使用 外部类名.this.成员 去访问</p><h2 id="匿名内部类"><a href="#匿名内部类" class="headerlink" title="匿名内部类"></a>匿名内部类</h2><p>1.基本语法：new 类或接口(参数列表）{<br>类体<br>};</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.hspedu.innerclass;</span><br><span class="line"></span><br><span class="line">public class AnonymousInnerClass &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Outer04 outer04 = new Outer04();</span><br><span class="line">        outer04.method();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class Outer04 &#123; //外部类</span><br><span class="line">    private int n1 = 10;//属性</span><br><span class="line">    public void method() &#123;//方法</span><br><span class="line">        //基于接口的匿名内部类</span><br><span class="line">        //3.老韩需求是 Tiger/Dog 类只是使用一次，后面再不使用</span><br><span class="line">        //4. 可以使用匿名内部类来简化开发</span><br><span class="line">        //5. tiger的编译类型 ? IA</span><br><span class="line">        //6. tiger的运行类型 ? 就是匿名内部类  Outer04$1</span><br><span class="line">        /*</span><br><span class="line">            我们看底层 会分配 类名 Outer04$1</span><br><span class="line">            class Outer04$1 implements IA &#123;</span><br><span class="line">                @Override</span><br><span class="line">                public void cry() &#123;</span><br><span class="line">                    System.out.println(&quot;老虎叫唤...&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">         */</span><br><span class="line">        //7. jdk底层在创建匿名内部类 Outer04$1,立即马上就创建了 Outer04$1实例，并且把地址</span><br><span class="line">        //   返回给 tiger</span><br><span class="line">        //8. 匿名内部类使用一次，就不能再使用</span><br><span class="line">        IA tiger = new IA() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void cry() &#123;</span><br><span class="line">                System.out.println(&quot;老虎叫唤...&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        System.out.println(&quot;tiger的运行类型=&quot; + tiger.getClass());</span><br><span class="line">        tiger.cry();</span><br><span class="line">        tiger.cry();</span><br><span class="line">        tiger.cry();</span><br><span class="line">        //演示基于类的匿名内部类</span><br><span class="line">        //分析</span><br><span class="line">        //1. father编译类型 Father</span><br><span class="line">        //2. father运行类型 Outer04$2</span><br><span class="line">        //3. 底层会创建匿名内部类</span><br><span class="line">        /*</span><br><span class="line">            class Outer04$2 extends Father&#123;</span><br><span class="line">                @Override</span><br><span class="line">                public void test() &#123;</span><br><span class="line">                    System.out.println(&quot;匿名内部类重写了test方法&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">         */</span><br><span class="line">        //4. 同时也直接返回了 匿名内部类 Outer04$2的对象</span><br><span class="line">        //5. 注意(&quot;jack&quot;) 参数列表会传递给 构造器</span><br><span class="line">        Father father = new Father(&quot;jack&quot;)&#123;</span><br><span class="line"></span><br><span class="line">            @Override</span><br><span class="line">            public void test() &#123;</span><br><span class="line">                System.out.println(&quot;匿名内部类重写了test方法&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        System.out.println(&quot;father对象的运行类型=&quot; + father.getClass());//Outer04$2</span><br><span class="line">        father.test();</span><br><span class="line"></span><br><span class="line">        //基于抽象类的匿名内部类 必须重写抽象类的所有方法</span><br><span class="line">        Animal animal = new Animal()&#123;</span><br><span class="line">            @Override</span><br><span class="line">            void eat() &#123;</span><br><span class="line">                System.out.println(&quot;小狗吃骨头...&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        animal.eat();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">interface IA &#123;//接口</span><br><span class="line">    public void cry();</span><br><span class="line">&#125;</span><br><span class="line">class Father &#123;//类</span><br><span class="line">    public Father(String name) &#123;//构造器</span><br><span class="line">        System.out.println(&quot;接收到name=&quot; + name);</span><br><span class="line">    &#125;</span><br><span class="line">    public void test() &#123;//方法</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">abstract class Animal &#123; //抽象类</span><br><span class="line">    abstract void eat();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.匿名内部类既是一个类的定义，同时它本身也是一个对象。<br>3.可以直接访问外部类的所有成员，包含私有的<br>4.不能添加访问修饰符<br>5.作用域：定义它的方法或代码块中<br>6.匿名内部类—-访问——&gt;外部类成员（直接访问）<br>7.外部其他类—不能访问———&gt;匿名内部类<br>8.如果外部类和局部内部类的成员重名，默认遵循就近原则，如果想访问外部类的成员，则可以使用 外部类名.this.成员 去访问<br>9.动态绑定<br>10.当做实参直接传递，简洁高效</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.hpedu.inner_;</span><br><span class="line"></span><br><span class="line">public class AnnyInnerClassExercise &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        cellphone cellphone = new cellphone();</span><br><span class="line">        cellphone.alarm(new Bell() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void ring() &#123;</span><br><span class="line">                System.out.println(&quot;pig get up&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        cellphone.alarm(new Bell() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void ring() &#123;</span><br><span class="line">                System.out.println(&quot;dog get up&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">interface Bell &#123;</span><br><span class="line">    public void ring();</span><br><span class="line">&#125;</span><br><span class="line">class cellphone &#123;</span><br><span class="line">    public void alarm(Bell bell)&#123;</span><br><span class="line">        System.out.println(&quot;bell&#x27;s hashcode is &quot;+bell);</span><br><span class="line">        bell.ring();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="成员内部类"><a href="#成员内部类" class="headerlink" title="成员内部类"></a>成员内部类</h2><p>notices:定义在外部类的成员位置，没有static修饰<br>1.可以添加任意修饰符<br>2.成员内部类—访问—-&gt;外部类成员（直接访问）<br>3.外部类—访问——–&gt;成员内部类（创建对象再访问）<br>4.外部其他类—–访问—–&gt;成员内部类（第一种方法：Outer08.Inner08 inner08 &#x3D; outer08.new Inner08();相当于把new Inner08（）当做是outer08的成员 第二种方法：在外部类中编写一个返回值为成员内部类对象的方法 public Inner08 getInner08Instance(){ return new Inner08; } 在main方法中调用 Outer08.Inner08 inner08Instance &#x3D; outer08.getInner08Instance(); ）<br>5.如果外部类和局部内部类的成员重名，默认遵循就近原则，如果想访问外部类的成员，则可以使用 外部类名.this.成员 去访问</p><h2 id="静态内部类"><a href="#静态内部类" class="headerlink" title="静态内部类"></a>静态内部类</h2><p>notices：定义在外部类的成员位置，并且有static修饰<br>1.可以添加任意访问修饰符，因为它的地位就是一个成员<br>2.作用域：和其他的成员，为整个类体<br>3.静态内部类—-访问—-&gt;外部类（直接访问所有静态成员）<br>4.外部类—–访问—–&gt;静态内部类（创建对象，再访问）<br>5.外部其他类——访问——-&gt;静态内部类</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//方式 1</span><br><span class="line">//因为静态内部类，是可以通过类名直接访问(前提是满足访问权限)</span><br><span class="line">Outer10.Inner10 inner10 = new Outer10.Inner10();</span><br><span class="line">inner10.say();</span><br><span class="line">//方式 2</span><br><span class="line">//编写一个方法，可以返回静态内部类的对象实例. Outer10.Inner10 inner101 = outer10.getInner10();</span><br><span class="line">System.out.println(&quot;============&quot;);</span><br><span class="line">inner101.say();</span><br></pre></td></tr></table></figure><p>6.如果外部类和静态内部类的成员重名时，静态内部类访问时，默认遵循就近原则，如果想访问外部类的成员，则可以使用（外部类名.成员)去访问</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown使用</title>
      <link href="/2022/09/11/cdb22131c583/"/>
      <url>/2022/09/11/cdb22131c583/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p>正文</p><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><p><strong>加粗</strong></p><ol><li>哈哈哈</li><li>酷酷酷</li><li>辣辣辣<ol><li>哈哈哈</li><li>呃呃呃</li><li>也一样</li></ol></li><li>uuu</li></ol><p><img src="https://s2.loli.net/2022/09/11/kq1JVwNQHKUhWux.jpg" alt="R-C _1_.jpg"><br><em>city</em></p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><table><thead><tr><th>小梅</th><th>小梅</th><th>小红</th></tr></thead><tbody><tr><td>1.2</td><td>3.4</td><td>3.3</td></tr><tr><td>5.5</td><td>5.5</td><td>4.4</td></tr></tbody></table><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p> <a href="https://www.limfx.pro/ReadArticle/57/yi-zhong-xie-zuo-de-xin-fang-fa#markdown%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A0%BC%E5%BC%8F">markdown使用教程</a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int i = 3;</span><br><span class="line">i++;</span><br><span class="line">print(i);</span><br></pre></td></tr></table></figure><h2 id="字体加黑"><a href="#字体加黑" class="headerlink" title="字体加黑"></a>字体加黑</h2><p> <strong>加黑</strong></p><p> <a href="https://blog.csdn.net/abcdef314159/article/details/117883222?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166359891916800180668169%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=166359891916800180668169&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-117883222-null-null.142%5Ev47%5Epc_rank_34_1,201%5Ev3%5Eadd_ask&utm_term=markdown%E5%AD%97%E4%BD%93%E9%A2%9C%E8%89%B2%E5%BF%AB%E6%8D%B7%E9%94%AE&spm=1018.2226.3001.4187">markdown快捷键</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL环境搭建</title>
      <link href="/2022/09/11/134b46eb0391/"/>
      <url>/2022/09/11/134b46eb0391/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-MySQL的卸载"><a href="#1-MySQL的卸载" class="headerlink" title="1. MySQL的卸载"></a>1. MySQL的卸载</h2><h3 id="停止MySQL服务"><a href="#停止MySQL服务" class="headerlink" title="停止MySQL服务"></a>停止MySQL服务</h3><p>按键盘上的“Ctrl + Shift + Esc”组合键，打开“任务管理器”对话框，可以在“服务”列表找到“MySQL8.0”的服务，如果现在“正在运行”状态，可以右键单击服务，选择“停<br>止”选项停止MySQL8.0的服务，如图所示。<br><img src="https://s2.loli.net/2022/09/19/UltRA8sqrwaBWoH.png" alt="mysql1.png"></p><h3 id="软件的卸载"><a href="#软件的卸载" class="headerlink" title="软件的卸载"></a>软件的卸载</h3><h4 id="方式1：通过控制面板方式"><a href="#方式1：通过控制面板方式" class="headerlink" title="方式1：通过控制面板方式"></a>方式1：通过控制面板方式</h4><p>直接在“控制面板”选择“卸载程序”，并在程序列表中<br>找到MySQL8.0服务器程序，直接双击卸载即可，如图所示。这种方式删除，数据目录下的数据不会跟着<br>删除。<br><img src="https://s2.loli.net/2022/09/19/Cyfk4o9xuY7K6FJ.png" alt="mysql2.png"></p><h4 id="方式2：通过360或电脑管家"><a href="#方式2：通过360或电脑管家" class="headerlink" title="方式2：通过360或电脑管家"></a>方式2：通过360或电脑管家</h4><h4 id="方式3：通过安装包提供的卸载功能卸载"><a href="#方式3：通过安装包提供的卸载功能卸载" class="headerlink" title="方式3：通过安装包提供的卸载功能卸载"></a>方式3：通过安装包提供的卸载功能卸载</h4><p>通过安装向导程序进行MySQL8.0服务器程序的卸载。</p><ol><li>再次双击下载的mysql-installer-community-8.0.26.0.msi文件，打开安装向导。安装向导会自动检测已<br>安装的MySQL服务器程序。</li><li>选择要卸载的MySQL服务器程序，单击“Remove”（移除），即可进行卸载<br><img src="https://s2.loli.net/2022/09/19/6givzRGQLtZwKFC.png" alt="mysql3.png"><br>找不到路径可以用<a href="https://www.voidtools.com/zh-cn/">everthing</a>搜索</li></ol><h3 id="残余文件的清理"><a href="#残余文件的清理" class="headerlink" title="残余文件的清理"></a>残余文件的清理</h3><p>（1）服务目录：mysql服务的安装目录<br>（2）数据目录：默认在C:\ProgramData\MySQL<br>如果自己单独指定过数据目录，就找到自己的数据目录进行删除即可。</p><h3 id="清理注册表"><a href="#清理注册表" class="headerlink" title="清理注册表"></a>清理注册表</h3><p>打开注册表编辑器：在系统的搜索框中输入 regedit<br>HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\Eventlog\Application\MySQL服务 目录删除<br>HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\MySQL服务 目录删除<br>HKEY_LOCAL_MACHINE\SYSTEM\ControlSet002\Services\Eventlog\Application\MySQL服务 目录删除<br>HKEY_LOCAL_MACHINE\SYSTEM\ControlSet002\Services\MySQL服务 目录删除<br>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Eventlog\Application\MySQL服务 目录删除<br>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\MySQL服务删除<br>notice:<strong>注册表中的ControlSet001,ControlSet002,不一定是001和002,可能是ControlSet005、006之类</strong></p><h3 id="删除环境变量配置"><a href="#删除环境变量配置" class="headerlink" title="删除环境变量配置"></a>删除环境变量配置</h3><p>找到path环境变量，将其中关于mysql的环境变量删除<br><img src="https://s2.loli.net/2022/09/19/XiRKz5b4NCrvxVD.png" alt="mysql4.png"></p><h2 id="2-MySQL的下载安装配置"><a href="#2-MySQL的下载安装配置" class="headerlink" title="2.MySQL的下载安装配置"></a>2.MySQL的下载安装配置</h2><ul><li><strong>MySQL Community Server 社区版本</strong>，开源免费，自由下载，但不提供官方技术支持，适用于<br>大多数普通用户。</li><li><strong>MySQL Enterprise Edition 企业版本</strong>，需付费，不能在线下载，可以试用30天。提供了更多的<br>功能和更完备的技术支持，更适合于对数据库的功能和可靠性要求较高的企业客户。</li><li><strong>MySQL Cluster 集群版</strong>，开源免费。用于架设集群服务器，可将几个MySQL Server封装成一个<br>Server。需要在社区版或企业版的基础上使用。</li><li><strong>MySQL Cluster CGE 高级集群版</strong>，需付费。</li></ul><h3 id="软件的下载"><a href="#软件的下载" class="headerlink" title="软件的下载"></a>软件的下载</h3><ol><li>下载地址<br><a href="https://www.mysql.com/">https://www.mysql.com/</a>  </li><li>打开官网，点击DOWNLOADS然后，点击 MySQL Community(GPL) Downloads<br><img src="https://s2.loli.net/2022/09/19/PqYcaGs1uV9rh45.png" alt="mysql5.png"></li><li>点击 MySQL Community Server<br>Windows平台下提供两种安装文件：MySQL二进制分发版（.msi安装文件）和免安装版（.zip压缩文件）。使用二进制分发版，因为该版本提供了图形化的安装向导过程。<br>在Windows 系统下推荐下载 MSI安装程序 ；点击 Go to Download Page 进行下载即可<br><img src="https://s2.loli.net/2022/09/19/cTNbA4pHrP1QhuF.png" alt="mysql6.png"></li></ol><ul><li>Windows下的MySQL8.0安装有两种安装程序<ul><li>mysql-installer-web-community-8.0.26.0.msi 下载程序大小：2.4M；安装时需要联网安<br>装组件。</li><li>mysql-installer-community-8.0.26.0.msi 下载程序大小：450.7M；安装时离线安装即<br>可。推荐。</li></ul></li><li>如果安装MySQL5.7版本的话，选择 Archives ，接着选择MySQL5.7的相应版本即可。这里下载最近<br>期的MySQL5.7.34版本。</li></ul><h3 id="MySQL8-0-版本的安装"><a href="#MySQL8-0-版本的安装" class="headerlink" title="MySQL8.0 版本的安装"></a>MySQL8.0 版本的安装</h3><ul><li>步骤1：双击下载的mysql-installer-community-8.0.26.0.msi文件，打开安装向导。</li><li>步骤2：打开“Choosing a Setup Type”（选择安装类型）窗口，这里选择“Custom（自定义安装）”类型按钮，单击“Next(下<br>一步)”按钮。<br><img src="https://s2.loli.net/2022/09/19/1AYSRjVhXpyLnZt.png" alt="mysql8.png"></li><li>步骤3：打开“Select Products” （选择产品）窗口，可以定制需要安装的产品清单。例如，选择“MySQL<br>Server 8.0.26-X64”后，单击“→”添加按钮，即可选择安装MySQL服务器，如图所示。采用通用的方法，可<br>以添加其他你需要安装的产品。<br><img src="https://s2.loli.net/2022/09/19/P6lUjpcG3vf1hAD.png" alt="mysql9.png"><br>此时如果直接“Next”（下一步），则产品的安装路径是默认的。如果想要自定义安装目录，则可以选中<br>对应的产品，然后在下面会出现“Advanced Options”（高级选项）的超链接<br><img src="https://s2.loli.net/2022/09/19/dGT6ISCskKQmJML.png" alt="mysql10.png"><br><img src="https://s2.loli.net/2022/09/19/FD12tjzRLTASneP.png" alt="mysql11.png"><br><img src="https://s2.loli.net/2022/09/19/C7Fpqzd1lEgGx4Q.png" alt="mysql12.png"><br><img src="https://s2.loli.net/2022/09/19/BHXIwf4pylTtb32.png" alt="mysql13.png"></li></ul><h3 id="配置MySQL8-0"><a href="#配置MySQL8-0" class="headerlink" title="配置MySQL8.0"></a>配置MySQL8.0</h3><ul><li>步骤1：单击“Next”（下一步）按钮，进入MySQL服务器类型配置窗口，如图所示。端口号一般选择默认<br>端口号3306。<br><img src="https://s2.loli.net/2022/09/19/6Wt3uLS1niFHEkY.png" alt="mysql14.png"><br>其中，“Config Type”选项用于设置服务器的类型。单击该选项右侧的下三角按钮，即可查看3个选项，如<br>图所示<br><img src="https://s2.loli.net/2022/09/19/YWa16hSIlZvHqOD.png" alt="mysql15.png"><ul><li><strong>Development Machine（开发机器）</strong> ：该选项代表典型个人用桌面工作站。此时机器上需要运行<br>多个应用程序，那么MySQL服务器将占用最少的系统资源。</li><li><strong>Server Machine（服务器）</strong> ：该选项代表服务器，MySQL服务器可以同其他服务器应用程序一起<br>运行，例如Web服务器等。MySQL服务器配置成适当比例的系统资源。</li><li><strong>Dedicated Machine（专用服务器）</strong> ：该选项代表只运行MySQL服务的服务器。MySQL服务器配置<br>成使用所有可用系统资源。</li></ul></li><li>步骤2：单击“Next”（下一步）按钮，打开设置授权方式窗口。其中，上面的选项是MySQL8.0提供的新的<br>授权方式，采用SHA256基础的密码加密方法；下面的选项是传统授权方法（保留5.x版本兼容性）。<br><img src="https://s2.loli.net/2022/09/19/mlrRXutWxwzTZ8K.png" alt="mysql16.png"></li><li>步骤3：单击“Next”（下一步）按钮，打开设置服务器root超级管理员的密码窗口，如图所示，需要输入<br>两次同样的登录密码。也可以通过“Add User”添加其他用户，添加其他用户时，需要指定用户名、允许<br>该用户名在哪台&#x2F;哪些主机上登录，还可以指定用户角色等。此处暂不添加用户，用户管理在MySQL高级<br>特性篇中讲解。</li><li>步骤4：单击“Next”（下一步）按钮，打开设置服务器名称窗口.<br><img src="https://s2.loli.net/2022/09/19/R9jMkySmnhiJQB3.png" alt="mysql17.png"></li><li>步骤5：单击“Next”（下一步）按钮，打开确认设置服务器窗口，单击“Execute”（执行）按钮。</li><li>步骤7：完成配置，如图所示。单击“Finish”（完成）按钮，即可完成服务器的配置。</li></ul><h3 id="配置MySQL8-0-环境变量"><a href="#配置MySQL8-0-环境变量" class="headerlink" title="配置MySQL8.0 环境变量"></a>配置MySQL8.0 环境变量</h3><ul><li>找到MySQL安装目录下的bin目录 复制路径</li><li>在系统环境变量中添加此路径<br><img src="https://s2.loli.net/2022/09/19/olNgIB5rWFQqOJ7.png" alt="mysql18.png"></li></ul>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/09/08/61e52643dc3b/"/>
      <url>/2022/09/08/61e52643dc3b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
